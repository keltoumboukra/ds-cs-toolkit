// Collect Mac system logs
loki.source.file "system_logs" {
  path = [
    "/var/log/system.log",
    "/var/log/secure.log",
    "/var/log/asl/*.asl",
    "/var/log/DiagnosticReports/*.crash",
    "/var/log/DiagnosticReports/*.spin",
    "/var/log/DiagnosticReports/*.hang"
  ]
  follow = true
  forward_to = [loki.process.system_logs.receiver]
}

// Collect application logs
loki.source.file "application_logs" {
  path = [
    "/var/log/install.log",
    "/var/log/commerce.log",
    "/var/log/fsck_hfs.log",
    "/var/log/fsck_apfs.log"
  ]
  follow = true
  forward_to = [loki.process.application_logs.receiver]
}

// Collect user-specific logs
loki.source.file "user_logs" {
  path = [
    "/Users/*/Library/Logs/*.log",
    "/Users/*/Library/Logs/DiagnosticReports/*.crash",
    "/Users/*/Library/Logs/DiagnosticReports/*.spin"
  ]
  follow = true
  forward_to = [loki.process.user_logs.receiver]
}

// Process system logs
loki.process "system_logs" {
  stage.static_labels {
    values = {
      source = "system",
      platform = "macos"
    }
  }
  forward_to = [loki.write.mac_logs.receiver]
}

// Process application logs
loki.process "application_logs" {
  stage.static_labels {
    values = {
      source = "application",
      platform = "macos"
    }
  }
  forward_to = [loki.write.mac_logs.receiver]
}

// Process user logs
loki.process "user_logs" {
  stage.static_labels {
    values = {
      source = "user",
      platform = "macos"
    }
  }
  forward_to = [loki.write.mac_logs.receiver]
}

// Send everything to Loki
loki.write "mac_logs" {
  endpoint {
    url = "http://loki:3100/loki/api/v1/push"
  }
}

// Enable live debugging in Alloy UI
livedebugging {
  enabled = true
}
