// Discover Docker containers
discovery.docker "weather_containers" {
  host = "unix:///var/run/docker.sock"
  refresh_interval = "5s"
}

// Relabel discovered Docker containers
discovery.relabel "weather_containers" {
  targets = discovery.docker.weather_containers.targets

  rule {
    source_labels = ["__meta_docker_container_name"]
    regex = "/(.*)"
    target_label = "container"
    action = "replace"
  }
}

// Collect logs from Docker containers
loki.source.docker "weather_logs" {
  host = "unix:///var/run/docker.sock"
  targets = discovery.relabel.weather_containers.output
  forward_to = [loki.process.weather_logs.receiver]
  refresh_interval = "5s"
}

// Process weather application logs
loki.process "weather_logs" {
  forward_to = [loki.write.weather_logs.receiver]

  stage.labels {
    values = {
      source = "weather-api",
      platform = "docker",
      app = "weather-service",
    }
  }
}

// Send everything to Loki
loki.write "weather_logs" {
  endpoint {
    url = "http://loki:3100/loki/api/v1/push"
  }
}

// Enable live debugging in Alloy UI
livedebugging {
  enabled = true
}
